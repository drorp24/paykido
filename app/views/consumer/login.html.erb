<div id="window_content" class="clearfix">
	<div class="fl left">
		<div id="logo">
			<%= image_tag "/images/arca_logo.png", :id=>"logoimg",:border => 0 %>
		</div>	
			
		<div id="welcome_message" class="text">
			<div id="welcomeline" class="text">
				<span id="salutation"><%= @salutation %></span>
				<span id="name"><%= @name %></span>
			</div>
			<div id="login_button" class="text">
				<fb:login-button perms="offline_access" 
								 registration-url="#registration"
								 onlogin="$.ajax({url: 'http://<%= request.host + ':' + request.port.to_s %>/consumer/login_callback'});"
								 autologoutlink="true"
								 V="2" />
	 		</div>
		</div>
	   	<div id="ajax_message">
			<p id="first_line" class="text"><%= @first_line %><span id="action"></span></p>
			<p id="second_line" class="text"><%= @second_line %></p>		
		</div>
		
		<div id="buy" class="box">
			<%= form_for :consumer, :url => {:action => :buy}, :html => {:id => "buy_form"} do |f| %>
				<%= submit_tag "Click to Buy", :id=> "buy_button", :class => "widget_button fg-button ui-state-default loginbutton ui-very-rounded-corners" %>
			<% end %>
			<div id="status_line">
				<span class="status_icon"></span>
				<span class="status_text"></span>
			</div>
		</div>

			
		<div id="pic">
			<% if @pic %>
				<%= image_tag @pic %>
			<% end %>
		</div>
		
		<div id="loadingZone"></div>
	</div>
<!-- Right pane - test in a clone and deploy only when ready. Make registration hide the new small modal! 
	<div class="fr right">
		<div id="invite" class="box">
		   	<div id="invite_message">
				<p id="invite_head" class="text">Spread the word - earn credits!</p>
				<p id="invite_1" class="text">Enjoying Paykido? Tell your friends!</p>		
				<p id="invite_2" class="text">Let them know they can start buying</p>		
				<p id="invite_3" class="text">independently and safely.</p>		
				<p id="invite_4" class="text"></p>	
			</div>
			<div id="invite_div">	
				<p>
				    <input type="button"
				      onclick="sendRequestViaMultiFriendSelector(); return false;"
				      value="Invite friends!"
				      class="widget_button fg-button ui-state-default loginbutton ui-very-rounded-corners"
				      id="invite_button"
				    />
				</p>
			</div>
		</div>
		<div id="like" class="box">
			<fb:like-box href="http://www.facebook.com/pages/Paykido/175298209224744" width="292" height="500" show_faces="true" stream="true" header="true"></fb:like-box>
		</div>
	</div>
	-->
</div>

</div>
		
<div id="registration" style="display: none;">
	<p id="register_headline" class="text">Register to Paykido and buy with one click</p>
	<fb:registration  
		width="292" 
		fb_register="true"
		redirect-uri="http://<%= request.host + ':' + request.port.to_s %>/consumer/register_callback"  
		fields='[
			{ "name":"name"},
			{ "name":"consumer_phone",  "description":"Your own mobile # (e.g., 2131234567)",  		"type":"text"},
			{ "name":"payer_name",     "description":"Your parent name",  "type":"text"},
			{ "name":"payer_phone",     "description":"Your parent mobile # (e.g., 2131234567)",  "type":"text"},
			{ "name":"payer_email",     "description":"Your parent email address",    			"type":"text"},
		]' 
		>
	</fb:registration>
</div>


<script type="text/javascript">

// VALIDATION CHECKS: CHECK EMAILS ARE UNIQUE, PHONE NUMBERS VALID ETC
// Facebook bug prohibits error message to show on screen if widget width < 520 px
/*
function validate_async(form, cb) {
  $.getJSON('http://graph.facebook.com/' + form.payer_email + '?callback=?', 
    function(response) {
      if (response.error) {
        // Username isn't taken, let the form submit
        cb({payer_email: 'That username is taken'});
      }
      cb({payer_email: 'That username is taken'});
  });
}
*/

function sendRequestViaMultiFriendSelector() {
        FB.ui({method: 'apprequests',
          message: 'Hi! Paykido is a super-cool service that lets kids buy with a click!',
          data: 'dror',
          title:'Spread the word and earn credits!'
        }, 
        function(response)  {
          if (response.request)  {
          	invites = response.to.length
        	alert('Thanks! ' + invites + ' more points for you!')
          }
      }
);
      }
      
$(document).ready(function (){ 

var dror;
	FB.getLoginStatus(function(response) {
	  if (response.status === 'connected') {
	    // the user is logged in and has authenticated your
	    // app, and response.authResponse supplies
	    // the user's ID, a valid access token, a signed
	    // request, and the time the access token 
	    // and signed request each expire
	     dror = response.authResponse.userID;

	    var accessToken = response.authResponse.accessToken;
	    $('#registration').attr('style', 'display:none');
	  } else if (response.status === 'not_authorized') {
	    // the user is logged in to Facebook, 
	    // but has not authenticated your app
	  } else {
	    // the user isn't logged in to Facebook.
	  }
	 });
	 
	alert(dror);

	// disable buy button unless registered: handle with Devise
	<% unless @consumer %>
		$('#buy_button').addClass("ui-state-hover").blur();
		$('#buy_button').attr("disabled", true);
	<% end %>
	

	$('#buy_button').click(function () {
		$('#loadingZone').addClass('loading-indicator');
	})

	// reveal facebook registration form as soon as 'register' is clicked
	$('#login_button').click(function() {
		if ($('.fb_button_text').html() == 'Register') {
			$('#registration').attr('style', 'display:block');
			$('#invite_button').hide();			
		}
	});
	
	// explicit rendering of XFBML: required because of the lightbox. Without it, Chrome will not display the blue button.
	FB.XFBML.parse(); 

});

</script>